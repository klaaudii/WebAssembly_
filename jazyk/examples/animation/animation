        (define (addv rv v i j len)
        (if (<= j len)
        (begin (+v rv 0 4 v i j)  (addv rv v j (+ j 4) len))(begin)))

        (define (f rv v)
        (addv rv v 0 4 (vector-length v))
        (vector-set! rv 0 (/ (+ (vector-ref rv 0) (vector-ref rv 2))  (/ (vector-length v) 2) ))
        (vector-set! rv 1 (/ (+ (vector-ref rv 1) (vector-ref rv 3))(/ (vector-length v) 2) )))

        (define (add2 v1 v2)
        (+v v1 0 (vector-length v1) v2 0 (vector-length v2)))

        (export f)
        (export addv)
        (export add2)

        (define (ff rv v pv i)   (f rv v) (add2 v pv)   )
        (export ff)