// Generated from SchemeLikeL.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from './antlr4/index.web.js';


const serializedATN = [4,0,25,237,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
10,1,10,1,10,3,10,114,8,10,1,11,1,11,1,11,1,11,1,11,3,11,121,8,11,1,12,1,
12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
1,12,3,12,140,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,150,8,13,
1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,177,8,14,1,15,
1,15,1,15,1,15,1,15,1,15,1,16,1,16,5,16,187,8,16,10,16,12,16,190,9,16,1,
16,5,16,193,8,16,10,16,12,16,196,9,16,1,17,1,17,1,18,1,18,1,19,1,19,5,19,
204,8,19,10,19,12,19,207,9,19,1,20,4,20,210,8,20,11,20,12,20,211,1,20,1,
20,4,20,216,8,20,11,20,12,20,217,1,21,4,21,221,8,21,11,21,12,21,222,1,22,
1,22,1,22,1,23,1,23,1,23,1,24,4,24,232,8,24,11,24,12,24,233,1,24,1,24,0,
0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,1,0,
8,3,0,42,43,45,45,47,47,2,0,60,60,62,62,2,0,65,90,97,122,4,0,33,33,45,45,
65,90,97,122,1,0,48,57,1,0,32,32,2,0,10,10,32,32,3,0,9,10,13,13,32,32,253,
0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
0,0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,58,1,0,0,0,5,65,1,0,0,0,7,69,
1,0,0,0,9,75,1,0,0,0,11,78,1,0,0,0,13,83,1,0,0,0,15,90,1,0,0,0,17,95,1,0,
0,0,19,103,1,0,0,0,21,113,1,0,0,0,23,120,1,0,0,0,25,139,1,0,0,0,27,149,1,
0,0,0,29,176,1,0,0,0,31,178,1,0,0,0,33,184,1,0,0,0,35,197,1,0,0,0,37,199,
1,0,0,0,39,201,1,0,0,0,41,209,1,0,0,0,43,220,1,0,0,0,45,224,1,0,0,0,47,227,
1,0,0,0,49,231,1,0,0,0,51,52,5,100,0,0,52,53,5,101,0,0,53,54,5,102,0,0,54,
55,5,105,0,0,55,56,5,110,0,0,56,57,5,101,0,0,57,2,1,0,0,0,58,59,5,108,0,
0,59,60,5,97,0,0,60,61,5,109,0,0,61,62,5,98,0,0,62,63,5,100,0,0,63,64,5,
97,0,0,64,4,1,0,0,0,65,66,5,108,0,0,66,67,5,101,0,0,67,68,5,116,0,0,68,6,
1,0,0,0,69,70,5,98,0,0,70,71,5,101,0,0,71,72,5,103,0,0,72,73,5,105,0,0,73,
74,5,110,0,0,74,8,1,0,0,0,75,76,5,105,0,0,76,77,5,102,0,0,77,10,1,0,0,0,
78,79,5,115,0,0,79,80,5,101,0,0,80,81,5,116,0,0,81,82,5,33,0,0,82,12,1,0,
0,0,83,84,5,118,0,0,84,85,5,101,0,0,85,86,5,99,0,0,86,87,5,116,0,0,87,88,
5,111,0,0,88,89,5,114,0,0,89,14,1,0,0,0,90,91,5,108,0,0,91,92,5,105,0,0,
92,93,5,115,0,0,93,94,5,116,0,0,94,16,1,0,0,0,95,96,5,100,0,0,96,97,5,105,
0,0,97,98,5,115,0,0,98,99,5,112,0,0,99,100,5,108,0,0,100,101,5,97,0,0,101,
102,5,121,0,0,102,18,1,0,0,0,103,104,5,101,0,0,104,105,5,120,0,0,105,106,
5,112,0,0,106,107,5,111,0,0,107,108,5,114,0,0,108,109,5,116,0,0,109,20,1,
0,0,0,110,114,7,0,0,0,111,112,5,43,0,0,112,114,5,118,0,0,113,110,1,0,0,0,
113,111,1,0,0,0,114,22,1,0,0,0,115,116,5,97,0,0,116,117,5,110,0,0,117,121,
5,100,0,0,118,119,5,111,0,0,119,121,5,114,0,0,120,115,1,0,0,0,120,118,1,
0,0,0,121,24,1,0,0,0,122,123,5,113,0,0,123,124,5,117,0,0,124,125,5,111,0,
0,125,126,5,116,0,0,126,127,5,105,0,0,127,128,5,101,0,0,128,129,5,110,0,
0,129,140,5,116,0,0,130,131,5,114,0,0,131,132,5,101,0,0,132,133,5,109,0,
0,133,134,5,97,0,0,134,135,5,105,0,0,135,136,5,110,0,0,136,137,5,100,0,0,
137,138,5,101,0,0,138,140,5,114,0,0,139,122,1,0,0,0,139,130,1,0,0,0,140,
26,1,0,0,0,141,150,5,61,0,0,142,143,5,60,0,0,143,150,5,61,0,0,144,145,5,
62,0,0,145,150,5,61,0,0,146,150,7,1,0,0,147,148,5,33,0,0,148,150,5,61,0,
0,149,141,1,0,0,0,149,142,1,0,0,0,149,144,1,0,0,0,149,146,1,0,0,0,149,147,
1,0,0,0,150,28,1,0,0,0,151,152,5,102,0,0,152,153,5,108,0,0,153,154,5,111,
0,0,154,155,5,111,0,0,155,177,5,114,0,0,156,157,5,114,0,0,157,158,5,111,
0,0,158,159,5,117,0,0,159,160,5,110,0,0,160,177,5,100,0,0,161,162,5,99,0,
0,162,163,5,101,0,0,163,164,5,105,0,0,164,165,5,108,0,0,165,166,5,105,0,
0,166,167,5,110,0,0,167,177,5,103,0,0,168,169,5,116,0,0,169,170,5,114,0,
0,170,171,5,117,0,0,171,172,5,110,0,0,172,173,5,99,0,0,173,174,5,97,0,0,
174,175,5,116,0,0,175,177,5,101,0,0,176,151,1,0,0,0,176,156,1,0,0,0,176,
161,1,0,0,0,176,168,1,0,0,0,177,30,1,0,0,0,178,179,5,110,0,0,179,180,5,117,
0,0,180,181,5,108,0,0,181,182,5,108,0,0,182,183,5,63,0,0,183,32,1,0,0,0,
184,188,7,2,0,0,185,187,7,3,0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,186,
1,0,0,0,188,189,1,0,0,0,189,194,1,0,0,0,190,188,1,0,0,0,191,193,7,4,0,0,
192,191,1,0,0,0,193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,34,1,
0,0,0,196,194,1,0,0,0,197,198,5,40,0,0,198,36,1,0,0,0,199,200,5,41,0,0,200,
38,1,0,0,0,201,205,7,5,0,0,202,204,7,6,0,0,203,202,1,0,0,0,204,207,1,0,0,
0,205,203,1,0,0,0,205,206,1,0,0,0,206,40,1,0,0,0,207,205,1,0,0,0,208,210,
7,4,0,0,209,208,1,0,0,0,210,211,1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,
212,213,1,0,0,0,213,215,5,46,0,0,214,216,7,4,0,0,215,214,1,0,0,0,216,217,
1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,42,1,0,0,0,219,221,7,4,0,0,220,
219,1,0,0,0,221,222,1,0,0,0,222,220,1,0,0,0,222,223,1,0,0,0,223,44,1,0,0,
0,224,225,5,45,0,0,225,226,3,41,20,0,226,46,1,0,0,0,227,228,5,45,0,0,228,
229,3,43,21,0,229,48,1,0,0,0,230,232,7,7,0,0,231,230,1,0,0,0,232,233,1,0,
0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,235,1,0,0,0,235,236,6,24,0,0,236,
50,1,0,0,0,14,0,113,120,139,149,176,188,194,203,205,211,217,222,233,1,6,
0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SchemeLikeLLexer extends antlr4.Lexer {

    static grammarFileName = "SchemeLikeL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'define'", "'lambda'", "'let'", "'begin'", 
                         "'if'", "'set!'", "'vector'", "'list'", "'display'", 
                         "'export'", null, null, null, null, null, "'null?'", 
                         null, "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, "OPERATOR", "LOGOPERATOR", "BIOPERATOR", 
                          "LOGBIOPERATOR", "UNIOPERATOR", "LOGUNIOPERATOR", 
                          "VARIABLE", "PSTART", "PEND", "SPACE", "FLOAT", 
                          "INT", "NFLOAT", "NINT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "OPERATOR", "LOGOPERATOR", 
                      "BIOPERATOR", "LOGBIOPERATOR", "UNIOPERATOR", "LOGUNIOPERATOR", 
                      "VARIABLE", "PSTART", "PEND", "SPACE", "FLOAT", "INT", 
                      "NFLOAT", "NINT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

SchemeLikeLLexer.EOF = antlr4.Token.EOF;
SchemeLikeLLexer.T__0 = 1;
SchemeLikeLLexer.T__1 = 2;
SchemeLikeLLexer.T__2 = 3;
SchemeLikeLLexer.T__3 = 4;
SchemeLikeLLexer.T__4 = 5;
SchemeLikeLLexer.T__5 = 6;
SchemeLikeLLexer.T__6 = 7;
SchemeLikeLLexer.T__7 = 8;
SchemeLikeLLexer.T__8 = 9;
SchemeLikeLLexer.T__9 = 10;
SchemeLikeLLexer.OPERATOR = 11;
SchemeLikeLLexer.LOGOPERATOR = 12;
SchemeLikeLLexer.BIOPERATOR = 13;
SchemeLikeLLexer.LOGBIOPERATOR = 14;
SchemeLikeLLexer.UNIOPERATOR = 15;
SchemeLikeLLexer.LOGUNIOPERATOR = 16;
SchemeLikeLLexer.VARIABLE = 17;
SchemeLikeLLexer.PSTART = 18;
SchemeLikeLLexer.PEND = 19;
SchemeLikeLLexer.SPACE = 20;
SchemeLikeLLexer.FLOAT = 21;
SchemeLikeLLexer.INT = 22;
SchemeLikeLLexer.NFLOAT = 23;
SchemeLikeLLexer.NINT = 24;
SchemeLikeLLexer.WS = 25;



