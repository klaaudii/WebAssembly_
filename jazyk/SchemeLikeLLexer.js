// Generated from SchemeLikeL.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from './antlr4/index.web.js';


const serializedATN = [4,0,21,206,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,
6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
8,1,9,1,9,1,9,1,9,1,9,1,9,3,9,102,8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,120,8,10,1,11,1,11,1,11,
1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,152,
8,11,1,12,1,12,5,12,156,8,12,10,12,12,12,159,9,12,1,12,5,12,162,8,12,10,
12,12,12,165,9,12,1,13,1,13,1,14,1,14,1,15,1,15,5,15,173,8,15,10,15,12,15,
176,9,15,1,16,4,16,179,8,16,11,16,12,16,180,1,16,1,16,4,16,185,8,16,11,16,
12,16,186,1,17,4,17,190,8,17,11,17,12,17,191,1,18,1,18,1,18,1,19,1,19,1,
19,1,20,4,20,201,8,20,11,20,12,20,202,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,
5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
18,37,19,39,20,41,21,1,0,8,3,0,42,43,45,45,47,47,2,0,60,60,62,62,2,0,65,
90,97,122,4,0,33,33,45,45,65,90,97,122,1,0,48,57,1,0,32,32,2,0,10,10,32,
32,3,0,9,10,13,13,32,32,223,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
0,0,0,1,43,1,0,0,0,3,50,1,0,0,0,5,57,1,0,0,0,7,60,1,0,0,0,9,66,1,0,0,0,11,
70,1,0,0,0,13,75,1,0,0,0,15,82,1,0,0,0,17,87,1,0,0,0,19,101,1,0,0,0,21,119,
1,0,0,0,23,151,1,0,0,0,25,153,1,0,0,0,27,166,1,0,0,0,29,168,1,0,0,0,31,170,
1,0,0,0,33,178,1,0,0,0,35,189,1,0,0,0,37,193,1,0,0,0,39,196,1,0,0,0,41,200,
1,0,0,0,43,44,5,100,0,0,44,45,5,101,0,0,45,46,5,102,0,0,46,47,5,105,0,0,
47,48,5,110,0,0,48,49,5,101,0,0,49,2,1,0,0,0,50,51,5,108,0,0,51,52,5,97,
0,0,52,53,5,109,0,0,53,54,5,98,0,0,54,55,5,100,0,0,55,56,5,97,0,0,56,4,1,
0,0,0,57,58,5,105,0,0,58,59,5,102,0,0,59,6,1,0,0,0,60,61,5,98,0,0,61,62,
5,101,0,0,62,63,5,103,0,0,63,64,5,105,0,0,64,65,5,110,0,0,65,8,1,0,0,0,66,
67,5,108,0,0,67,68,5,101,0,0,68,69,5,116,0,0,69,10,1,0,0,0,70,71,5,115,0,
0,71,72,5,101,0,0,72,73,5,116,0,0,73,74,5,33,0,0,74,12,1,0,0,0,75,76,5,118,
0,0,76,77,5,101,0,0,77,78,5,99,0,0,78,79,5,116,0,0,79,80,5,111,0,0,80,81,
5,114,0,0,81,14,1,0,0,0,82,83,5,108,0,0,83,84,5,105,0,0,84,85,5,115,0,0,
85,86,5,116,0,0,86,16,1,0,0,0,87,88,5,100,0,0,88,89,5,105,0,0,89,90,5,115,
0,0,90,91,5,112,0,0,91,92,5,108,0,0,92,93,5,97,0,0,93,94,5,121,0,0,94,18,
1,0,0,0,95,102,7,0,0,0,96,97,5,97,0,0,97,98,5,110,0,0,98,102,5,100,0,0,99,
100,5,111,0,0,100,102,5,114,0,0,101,95,1,0,0,0,101,96,1,0,0,0,101,99,1,0,
0,0,102,20,1,0,0,0,103,120,5,61,0,0,104,105,5,60,0,0,105,120,5,61,0,0,106,
107,5,62,0,0,107,120,5,61,0,0,108,120,7,1,0,0,109,110,5,33,0,0,110,120,5,
61,0,0,111,112,5,113,0,0,112,113,5,117,0,0,113,114,5,111,0,0,114,115,5,116,
0,0,115,116,5,105,0,0,116,117,5,101,0,0,117,118,5,110,0,0,118,120,5,116,
0,0,119,103,1,0,0,0,119,104,1,0,0,0,119,106,1,0,0,0,119,108,1,0,0,0,119,
109,1,0,0,0,119,111,1,0,0,0,120,22,1,0,0,0,121,122,5,110,0,0,122,123,5,117,
0,0,123,124,5,108,0,0,124,125,5,108,0,0,125,152,5,63,0,0,126,127,5,102,0,
0,127,128,5,108,0,0,128,129,5,111,0,0,129,130,5,111,0,0,130,152,5,114,0,
0,131,132,5,114,0,0,132,133,5,111,0,0,133,134,5,117,0,0,134,135,5,110,0,
0,135,152,5,100,0,0,136,137,5,99,0,0,137,138,5,101,0,0,138,139,5,105,0,0,
139,140,5,108,0,0,140,141,5,105,0,0,141,142,5,110,0,0,142,152,5,103,0,0,
143,144,5,116,0,0,144,145,5,114,0,0,145,146,5,117,0,0,146,147,5,110,0,0,
147,148,5,99,0,0,148,149,5,97,0,0,149,150,5,116,0,0,150,152,5,101,0,0,151,
121,1,0,0,0,151,126,1,0,0,0,151,131,1,0,0,0,151,136,1,0,0,0,151,143,1,0,
0,0,152,24,1,0,0,0,153,157,7,2,0,0,154,156,7,3,0,0,155,154,1,0,0,0,156,159,
1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,163,1,0,0,0,159,157,1,0,0,0,
160,162,7,4,0,0,161,160,1,0,0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,164,
1,0,0,0,164,26,1,0,0,0,165,163,1,0,0,0,166,167,5,40,0,0,167,28,1,0,0,0,168,
169,5,41,0,0,169,30,1,0,0,0,170,174,7,5,0,0,171,173,7,6,0,0,172,171,1,0,
0,0,173,176,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,32,1,0,0,0,176,174,
1,0,0,0,177,179,7,4,0,0,178,177,1,0,0,0,179,180,1,0,0,0,180,178,1,0,0,0,
180,181,1,0,0,0,181,182,1,0,0,0,182,184,5,46,0,0,183,185,7,4,0,0,184,183,
1,0,0,0,185,186,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,34,1,0,0,0,188,
190,7,4,0,0,189,188,1,0,0,0,190,191,1,0,0,0,191,189,1,0,0,0,191,192,1,0,
0,0,192,36,1,0,0,0,193,194,5,45,0,0,194,195,3,33,16,0,195,38,1,0,0,0,196,
197,5,45,0,0,197,198,3,35,17,0,198,40,1,0,0,0,199,201,7,7,0,0,200,199,1,
0,0,0,201,202,1,0,0,0,202,200,1,0,0,0,202,203,1,0,0,0,203,204,1,0,0,0,204,
205,6,20,0,0,205,42,1,0,0,0,12,0,101,119,151,157,163,172,174,180,186,191,
202,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SchemeLikeLLexer extends antlr4.Lexer {

    static grammarFileName = "SchemeLikeL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'define'", "'lambda'", "'if'", "'begin'", 
                         "'let'", "'set!'", "'vector'", "'list'", "'display'", 
                         null, null, null, null, "'('", "')'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, "OPERATOR", "BIOPERATOR", "UNIOPERATOR", 
                          "VARIABLE", "PSTART", "PEND", "SPACE", "FLOAT", 
                          "INT", "NFLOAT", "NINT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "OPERATOR", "BIOPERATOR", "UNIOPERATOR", 
                      "VARIABLE", "PSTART", "PEND", "SPACE", "FLOAT", "INT", 
                      "NFLOAT", "NINT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

SchemeLikeLLexer.EOF = antlr4.Token.EOF;
SchemeLikeLLexer.T__0 = 1;
SchemeLikeLLexer.T__1 = 2;
SchemeLikeLLexer.T__2 = 3;
SchemeLikeLLexer.T__3 = 4;
SchemeLikeLLexer.T__4 = 5;
SchemeLikeLLexer.T__5 = 6;
SchemeLikeLLexer.T__6 = 7;
SchemeLikeLLexer.T__7 = 8;
SchemeLikeLLexer.T__8 = 9;
SchemeLikeLLexer.OPERATOR = 10;
SchemeLikeLLexer.BIOPERATOR = 11;
SchemeLikeLLexer.UNIOPERATOR = 12;
SchemeLikeLLexer.VARIABLE = 13;
SchemeLikeLLexer.PSTART = 14;
SchemeLikeLLexer.PEND = 15;
SchemeLikeLLexer.SPACE = 16;
SchemeLikeLLexer.FLOAT = 17;
SchemeLikeLLexer.INT = 18;
SchemeLikeLLexer.NFLOAT = 19;
SchemeLikeLLexer.NINT = 20;
SchemeLikeLLexer.WS = 21;



